@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using ServerStarter.Server
@using System.Security.Claims

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

@code {
    private AuthenticationState context;
}

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, <img src="@GetAvatarUrl(context)" /> @GetName(context)!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="api/SteamAuth"><img src="assets/img/sits_01.png"/></a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private string GetAvatarUrl(AuthenticationState state)
    {
        var claim = state.User.Claims.FirstOrDefault(c => c.Type == IcebearClaimTypes.Avatar);

        return claim?.Value;
    }

    private string GetName(AuthenticationState state)
    {
        var claim = state.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name);

        return claim?.Value ?? state.User.Identity.Name;
    }
}
